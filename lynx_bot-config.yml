token: "LICHESS_API_TOKEN"  # Lichess OAuth2 Token
url: "https://lichess.org/" # Lichess base URL

engine:                     # Engine settings
  dir: "/lynx"              # Dir containing engines
  name: "Lynx"              # Binary name of the engine to use
  protocol: "uci"
#   ponder: false
#   polyglot:
#     enabled: false           # Activate polyglot book.
#     book:
#       standard:              # List of book file paths for variant standard.
#         - engines/book1.bin
#         - engines/book2.bin
# #     atomic:                # List of book file paths for variant atomic.
# #       - engines/atomicbook1.bin
# #       - engines/atomicbook2.bin
# #     etc.
# #     Use the same pattern for 'giveaway' (antichess), 'crazyhouse', 'horde', 'kingofthehill', 'racingkings' and '3check' as well.
#     min_weight: 1            # Does not select moves with weight below min_weight (min 0, max: 65535).
#     selection: "weighted_random" # Move selection is one of "weighted_random", "uniform_random" or "best_move" (but not below the min_weight in the 2nd and 3rd case).
#     max_depth: 8             # Half move max depth
engine_options:             # Any custom command line params to pass to the engine
  silence_stderr: false     # Some engines (yes you, leela) are very noisy

abort_time: 20              # Time to abort a game in seconds when there is no activity
fake_think_time: false      # Artificially slow down the bot to pretend like it's thinking
rate_limiting_delay: 0      # Time (in ms) to delay after sending a move to prevent "Too Many Requests" errors.
move_overhead: 1000         # Increase if your bot flags games too often.


challenge:                  # Incoming challenges
  concurrency: 1            # Number of games to play simultaneously
  sort_by: "best"           # Possible values: "best", "first"
  accept_bot: true          # Accepts challenges coming from other bots
  only_bot: false           # Accepts challenges by bots only
  max_increment: 180        # Maximum amount of increment to accept a challenge. the max is 180s. set to 0 for no increment
  min_increment: 0          # Minimum amount of increment to accept a challenge
  max_base: 7200            # Maximum amount of base time to accept a challenge. 2h
  min_base: 60              # Minimum amount of base time to accept a challenge. 60s
  variants:                 # Chess variants to accept (http://lichess.org/variant)
    - standard
    - fromPosition
#   - antichess
#   - atomic
#   - chess960
#   - crazyhouse
#   - horde
#   - kingOfTheHill
#   - racingKings
#   - threeCheck
  time_controls:            # time controls to accept
#     - ultraBullet
    - bullet
    - blitz
    - rapid
    - classical
#     - correspondence
  modes:                    # game modes to accept
    - casual                # unrated games
    - rated                 # rated games - must comment if the engine doesn't try to win

#   uci_options:              # Arbitrary UCI options passed to the engine.
#     Move Overhead: 100      # Increase if your bot flags games too often.
#     Threads: 2              # Max CPU threads the engine can use.
#     Hash: 256               # Max memory (in megabytes) the engine can allocate.
#   go_commands:              # Additional options to pass to the UCI go command.
#     nodes: 1                # Search so many nodes only.
#     depth: 5                # Search depth ply only.
#     movetime: 1000          # Integer. Search exactly movetime milliseconds.